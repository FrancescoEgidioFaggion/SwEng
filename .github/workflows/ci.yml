name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install MPI
      run: |
        sudo apt-get update && sudo apt-get install -y libopenmpi-dev

    - name: Install cmake
      uses: jwlawson/actions-setup-cmake@v1

    - name: Configure Cmake
      run: cmake -S . -B build

    - name: Build matrix multiplication library
      run: cmake --build build --target matrix_multiplication_without_errors

    - name: Build main executable
      run: cmake --build build --target main

    - name: Build test executable
      run: cmake --build build --target test_multiplication

    - name: Run Tests
      run: ctest --test-dir build

    - name: Install Singularity dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            autoconf \
            automake \
            cryptsetup \
            fuse2fs \
            fuse \
            git \
            libfuse-dev \
            libglib2.0-dev \
            libseccomp-dev \
            libtool \
            pkg-config \
            runc \
            squashfs-tools \
            squashfs-tools-ng \
            uidmap \
            wget \
            zlib1g-dev

    - name: Install Singularity
      run: |
        wget https://github.com/sylabs/singularity/releases/download/v4.1.3/singularity-ce_4.1.3-jammy_amd64.deb
        sudo dpkg -i singularity-ce_4.1.3-jammy_amd64.deb
      
    - name: Build Singularity container
      run: |
        sudo singularity build matr.sif Singularity.def

    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Transfer stuff via SCP
      run: |
        sshpass -p "${{ secrets.SSH_PRIVATE_KEY }}" scp -o StrictHostKeyChecking=no matr.sif monitor.py matrixA.txt matrixB.txt a08trb70@login.g100.cineca.it:/path/to/your/directory

    - name: Run job via SSH
      run: |
        ssh-keygen -f "/home/runner/.ssh/known_hosts" -R "login.g100.cineca.it"
        sshpass -p "${{ secrets.SSH_PRIVATE_KEY }}" ssh -o StrictHostKeyChecking=no a08trb70@login.g100.cineca.it 'bash -s' < job.sh
